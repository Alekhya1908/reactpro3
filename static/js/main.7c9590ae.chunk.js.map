{"version":3,"sources":["Reac_resume.js","App.js","serviceWorker.js","index.js","profile_pic.svg"],"names":["Reac_resume","props","fetch","then","response","json","data","console","log","info","profile","location","id","carrer","className","src","logo","style","width","basics","name","href","Mobile","email","pin","class","edu","btech","bco","bper","byr","inter","ico","iper","iyr","ssc","Sco","Sper","Syr","skills","s","map","va","hobby","h","achieve","ai","declare","Home","profiles","values","index","key","to","pathname","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.7c9590ae.chunk.js","sourcesContent":["import React from 'react';\r\nimport data from './data/data.json';\r\nimport logo from './profile_pic.svg';\r\nexport default function  Reac_resume(props)\r\n{\r\n    fetch('http://jsonplaceholder.typicode.com/posts')\r\n    .then(response=>response.json())\r\n    .then(data=>console.log(data))\r\n    let info=data.profile[props.location.data.id];\r\n    console.log(info.carrer);\r\n    let i;\r\n    return(\r\n     \r\n\r\n        <div className=\"row justify-content-center bg-secondary\">\r\n            <div className=\"col-lg-3 m-3\">\r\n                 <div className=\"card shadow\">\r\n                     <div className=\"card-body text-center\">\r\n                     <img src={logo} style={{width:\"30%\"}}></img>\r\n                     <h3>{info.basics.name}</h3>\r\n                     <hr/>\r\n                    \r\n                      <a href={\"tel:\"+ info.basics.Mobile}>\r\n                      <p className=\"text-secondary\">{info.basics.Mobile}</p></a>\r\n                      <a href={\"mailto:\"+ info.basics.email}>\r\n                     <p className=\"text-secondary\">{info.basics.email}</p></a>\r\n                     <p className=\"text-secondary\">{info.basics.pin}</p>\r\n                     </div>\r\n                 \r\n                 </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-8 m-4 \">\r\n                <div className=\"card shadow p-3\">\r\n               <h4 className=\"text-info\">Career Objective</h4>\r\n               <p>{info.carrer}</p>\r\n               <hr/>\r\n\r\n               <h4 className=\"text-info\">Educational assets</h4>\r\n               <div class=\"table-responsive-sm\">\r\n               <table class=\"table table-bordered table-striped\" >\r\n                <thead class=\"thead-dark\">\r\n                    <tr>\r\n                        <th>Sno</th>\r\n                        <th>Institute</th>\r\n                        <th>course</th>\r\n                        <th>percent</th>\r\n                        <th>year</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody >\r\n                    <tr>\r\n                        <td>1</td>\r\n                        <td>{info.edu.btech}</td>\r\n                        <td>{info.edu.bco}</td>\r\n                        <td>{info.edu.bper}</td>\r\n                        <td>{info.edu.byr}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>2</td>\r\n                        <td>{info.edu.inter}</td>\r\n                        <td>{info.edu.ico}</td>\r\n                        <td>{info.edu.iper}</td>\r\n                        <td>{info.edu.iyr}</td>\r\n                    </tr>\r\n                    <tr >\r\n                        <td>3</td>\r\n                        <td >{info.edu.ssc}</td>\r\n                        <td>{info.edu.Sco}</td>\r\n                        <td>{info.edu.Sper}</td>\r\n                        <td>{info.edu.Syr}</td>\r\n                    </tr>                   \r\n\r\n                </tbody>\r\n                <tfoot>\r\n\r\n                </tfoot>\r\n                \r\n            </table>\r\n            </div>\r\n            <hr/>\r\n             <h4 className=\"text-info\">Skills</h4>\r\n             <ul>\r\n             {info.skills.s.map((va) => (\r\n                <li>{va}</li>\r\n             ))}\r\n            \r\n             </ul>\r\n             <hr/>\r\n               <h4 className=\"text-info\">Hobbies</h4>\r\n               <ul>\r\n               {info.hobby.h.map((va) => (\r\n                <li>{va}</li>\r\n             ))}\r\n           </ul>\r\n               \r\n               <hr/>\r\n               <h4 className=\"text-info\">Achievements</h4>\r\n               <ul>\r\n               {info.achieve.ai.map((va) => (\r\n                <li>{va}</li>\r\n             ))}\r\n\r\n               </ul>\r\n               <hr/>\r\n               <h4 className=\"text-info\">Declaration</h4>\r\n               <p>{info.achieve.declare}</p>\r\n               \r\n               </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport data from './data/data.json'\nimport {BrowserRouter,Route,Link} from 'react-router-dom';\nimport Reac_resume from './Reac_resume';\nimport logo from './profile_pic.svg';\nimport './css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Route exact path=\"/\" component={Home}></Route>\n    <Route exact path=\"/resume\" component={Reac_resume}></Route>\n    </BrowserRouter>\n  );\n}\n\nlet Home=()=>\n {\n   let  profiles=data.profile;\n   console.log(profiles);\n   return( \n   <div>\n         <div className=\"row justify-content-center\">\n             {profiles.map((values,index)=>(\n             <div className=\"col-lg-4 col-md-4 col-sm-10 mt-2\" key={index}>\n                <div className=\"card bg-secondary\">\n                   <div className=\"card-body text-center \" >\n                     <img src={logo} style={{width:\"30%\"}}></img>\n                     <h3>{values.basics.name}</h3>\n                     <hr/>\n                    \n                     <a href={\"tel:\"+ values.basics.Mobile}>\n                     <p className=\"text-dark\">{values.basics.Mobile}</p></a>\n                     <a href={\"mailto:\"+ values.basics.email}>\n                     <p className=\"text-dark\">{values.basics.email}</p></a>\n                     <p className=\"\">{values.basics.pin}</p>\n\n                     <Link to={{ pathname:\"/resume\",data:{id:index}}} className=\"btn btn-dark text-white\">View Profile</Link>\n                   </div>\n                 </div>\n              </div>\n         ))}\n         </div>\n   </div>\n   )\n }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profile_pic.6f88fc6b.svg\";"],"sourceRoot":""}